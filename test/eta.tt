let idfun : (A : U<0>) -> (B : U<0>) -> (A -> B) -> (A -> B) @ s =
    fun A -> fun B -> fun x -> x

normalize def idfun

let idpair : (A : U<0>) -> (B : U<0>) -> (A * B) -> (A * B) @ s=
    fun A -> fun B -> fun x -> x

normalize def idpair

normalize (fun A -> fun x -> x) at (A : U<0>) -> A -> A @ s
